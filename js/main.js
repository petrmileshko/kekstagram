import {
  renderPictures
} from './render-pictures.js'; // В качестве параметра принимает массив с постами, полученный с сервера и потом выводит на главную страницу все посты
import {
  openPicture
} from './open-picture.js'; // В качестве параметра принимает значение - объект с элементами ссылок на посты и массив с данными постов, инициализирует открытие поста в модальном окне по клику на нем
import {
  uploadPicture
} from './upload-picture.js'; // Инициализация интерфейса для редактирования поста и изображения в модальном окне и отправка его на сервер и обработку сообщений об отправке
import {
  ApiData
} from './api-data.js'; // Получение / отправка данных - первый аргумент колбэк для отрисовки полученных данных, второй аргумент функция для вывода сообщения об ошибке
import {
  readDataFail,
  sendDataMessage
} from './messages.js'; // Формирование сообщений
import {
  filters
} from './filters.js'; // Интерфейс для сортировки и вывода постов: 1) данные, 2) функция отрисовки постов на главной, 3) функция вывода модального окна при взаимодействии с постом на главной странице

const dataExchange = new ApiData(
  (data) => {
    filters(data, renderPictures, openPicture);
  },
  readDataFail); // Инициализация интерфейса для работы с данными постов

dataExchange.select(); // Загрузка постов с сервера, отрисовка на странице и инициализация просмотра поста в модальном окне

uploadPicture(dataExchange.insert, sendDataMessage); // Инициализация модального окна и обработчиков для загрузки постов на сервер / передаем колбэк для отправки данных на сервер и функцию для вывода сообщений
